#!/usesummit/sel/0.1a
# [ Analyze Website Screenshot // Analyze a screenshot of a company's webpage to gather insights.  Requires an OpenAI key. ]

# Define the input details including company name, page type, instructions, and screenshot URL
"input": =Object({
  "company_name": "Summit"<company_name>, 
  "page_type": "current home page"<page_description>,  
  "instructions": "summarize what this tells you about their target personas, markets, and segments."<gpt_instructions>,  
  "screenshot_url": ""<screenshot_url>  
})

# Construct the prompt for GPT, passing the image URL and other details
"prompt": =Object({
  "prompts": [
    {
      "role": "user",
      "content": [
        {"type": "text", "text": "Based on this screenshot of {{ input.company_name }}'s {{ input.page_type }}, {{ input.instructions }}."},
        {"type": "image_url", "image_url": {"url": "{{ input.screenshot_url }}"}}
      ]
    }
  ]
})

# Use GPT-4o to analyze the image and generate a response
"vision": =Ai("gpt-4o", "{{ OPENAI_KEY }}")

# Parse the raw analysis response from GPT
"extract_raw": =Parser("$..raw")

# Prepare the final response to include the analysis from GPT
"gpt_response": =Response("analysis")

# Logical flow: Connect the events to define the order of execution and data flow
"input" -> "prompt"
"prompt" -> "vision"
"vision" -> "extract_raw"
"extract_raw" -> "gpt_response"
