#!/usesummit/sel/0.1a

# Define the base64 encoded ChartMogul API Key
"chartmogul_api_key": =Text("""Basic <your_api_key_here>""")

# Define the customer's email for the search query
"customer_email": =Text("""paul@example.com""")

# Headers for the ChartMogul API requests, including authorization
"chartmogul_headers": =Object({"headers": {"Authorization": "{{ chartmogul_api_key }}", "Content-Type": "application/json"}})

# ChartMogul API call #1 - Retrieve Customer UUID by email
"customer_search": =Request('get', "https://api.chartmogul.com/v1/customers?email={{ customer_email }}")

# Link headers to the customer search
"chartmogul_headers" -> "customer_search"

# Parse out the customer UUID from the search results
"parse_customer_uuid": =Parser('$.entries[0].uuid')

# ChartMogul API call #2 - Retrieve MRR data for this customer UUID
"mrr_data": =Request('get', "https://api.chartmogul.com/v1/customers/{{ parse_customer_uuid }}/mrr")

# Link headers to the MRR data request
"chartmogul_headers" -> "mrr_data"

# Data for prompt, summarizing MRR information.
"summary_data": =Text("""The data to summarize: MRR for customer with email {{ customer_email }}: ${{ mrr_data.entries[0].mrr }}""")

# Example of how we want the GPT summary to look, stored in a spreadsheet for easy editing by ops.
"example_sheet": =Table("https://docs.google.com/spreadsheets/d/e/2PACX-1vQpTQwjPoba67riG6R1zziPA3fi7K668NqYR7qyDhDTXHpfgZ-evYzGteFNKu-qBeuTYV23F1UvB27E/pub?gid=0&single=true&output=csv")

# Extract example from Google Sheet.
"prompt_example": =Query("SELECT * FROM $table")

# Prompt itself, composed using the MRR data from ChartMogul and example summary text from GSheet.
"output": =Object({"prompt": [{"role": "system", "content": "You are a business analyst for a SaaS reviewing accounts. This customer account needs to be concisely summarized for our customer success team. An example of a great summary: {% for line in prompt_example.first %} -- {{ line }} -- {% endfor %}"}, {"role": "user", "content": "{{ summary_data }}"}]})

# Call GPT
"gpt_response": =Gpt("gpt-4", "sk-youropenaikeyhere")

# Turn GPT response into some friendly text.
"account_note": =Text("""{{ gpt_response }}""")

# Append the account note to a JSON response object with a single root attribute, `account_note`.
"response": =Response("account_note")

# Define flow of logic to compose the prompts.
"customer_email" -> "customer_search" -> "parse_customer_uuid" -> "mrr_data" -> "summary_data" -> "output" -> "gpt_response" -> "account_note" -> "response"

# Fetch and query Google Sheet.
"example_sheet" -> "prompt_example"
